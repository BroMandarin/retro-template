local hashes = require("game.core.hashes")

local SHADOW_VISIBLE = vmath.vector4(0.0, 0.0, 1.0, 1.0)
local SHADOW_HIDDEN = vmath.vector4(0.0, 0.0, 1.0, 0.0)

local root, start_n, controls_n, credits_n
local elements = {}
local selected_element = 1

local function show()
	gui.set_enabled(root, true)

	for e = 1, #elements do
		if e == selected_element then
			gui.set_shadow(elements[e], SHADOW_VISIBLE)
		else
			gui.set_shadow(elements[e], SHADOW_HIDDEN)
		end
	end
end

local function hide()
	gui.set_enabled(root, false)
	print("hide menu")
end

local function update_shadow()
	for e = 1, #elements do
		if e == selected_element then
			gui.set_shadow(elements[e], SHADOW_VISIBLE)
		else
			gui.set_shadow(elements[e], SHADOW_HIDDEN)
		end
	end
end

local function start()
end

local function controls()
	hide()
	msg.post("#controls", "show")
end

local function credits()
	hide()
	msg.post("#credits", "show")
end

local function accept(id)
	if id == 1 then
		start()
	elseif id == 2 then
		controls()
	elseif id == 3 then
		credits()
	end
end

local function select_element(id)
	if id < 1 then id = 3 end
	if id > 3 then id = 1 end

	selected_element = id
	
	update_shadow()
end

local function get_nodes()
	root = gui.get_node("root")
	start_n = gui.get_node("start")
	controls_n = gui.get_node("controls")
	credits_n = gui.get_node("credits")

	elements = { start_n, controls_n, credits_n }
end

function init(self)
	get_nodes()
	hide()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then
		show()
	elseif message_id == hash("hide") then
		hide()
	end
end

function on_input(self, action_id, action)
	if not action.pressed then return end
	if not gui.is_enabled(root) then return end

	if action_id == hashes.UP then
		select_element(selected_element - 1)
	elseif action_id == hashes.DOWN then
		select_element(selected_element + 1)
	elseif action_id == hashes.ACTION then
		accept(selected_element)
	end
end
